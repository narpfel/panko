---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/arithmetic/test_unary_plus.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition
      main~1 `fn(∅: int, argv: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~2 `int`
         argv~3 `ptr<ptr<char>>`)
      (compound-statement
         (definition c~4 `unsigned char` (truncate `unsigned char` (42 `int`)))
         (definition i~5 `int` (zero-extend `int` (c~4 `unsigned char`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (i~5 `int`)))
         (definition l~6 `unsigned long` (sign-extend `unsigned long` (42 `int`)))
         (definition l2~7 `unsigned long` (l~6 `unsigned long`))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (2 `int`)))))
               (l2~7 `unsigned long`))))))

----- stderr -----
