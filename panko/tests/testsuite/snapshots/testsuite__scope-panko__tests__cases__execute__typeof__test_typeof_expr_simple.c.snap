---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=scopes"
    - "--stop-after=scopes"
    - panko/tests/cases/execute/typeof/test_typeof_expr_simple.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/typeof/test_typeof_expr_simple.c"
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (declaration puts~1 `fn(∅: ptr<char const>) -> int` ∅)
   (function-definition
      main~2 `fn() -> int`
      (compound-statement
         (declaration x~3 `unsigned long` 42)
         (declaration y~4 `typeof((name x~3 `unsigned long`))` 27)
         (expression
            (call (name puts~1 `fn(∅: ptr<char const>) -> int`)
               (generic
                  (add (name x~3 `unsigned long`) (name y~4 `typeof((name x~3 `unsigned long`))`))
                  (assoc `typeof((add (name x~3 `unsigned long`) (name y~4 `typeof((name x~3 `unsigned long`))`)))` (string "it works")))))
         (declaration p~5 `ptr<typeof((add (name x~3 `unsigned long`) (name y~4 `typeof((name x~3 `unsigned long`))`))) const> const` (addressof (name x~3 `unsigned long`)))
         (declaration xs~6 `array<typeof((name x~3 `unsigned long`)); 10>` (braced ∅))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%zu\n")
               (lengthof (name xs~6 `array<typeof((name x~3 `unsigned long`)); 10>`))))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%zu\n")
               (lengthof `typeof((name xs~6 `array<typeof((name x~3 `unsigned long`)); 10>`))`)))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%zu\n")
               (sizeof `array<typeof((name x~3 `unsigned long`)); 5>`)))
         (return (deref (name p~5 `ptr<typeof((add (name x~3 `unsigned long`) (name y~4 `typeof((name x~3 `unsigned long`))`))) const> const`))))))

----- stderr -----
