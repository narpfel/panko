---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/linkage/test_linkage_of_string_literals/extern_fn.c
    - panko/tests/cases/execute/linkage/test_linkage_of_string_literals/main.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/linkage/test_linkage_of_string_literals/extern_fn.c"
   (declaration external (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)) ∅)
   (function-definition external
      (extern_fn~1 `fn() -> void` (static extern_fn))
      (compound-statement
         (expression
            (call `int` @0
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @8
                  (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)))
               (noop-type-conversion `ptr<char const>` @16
                  (noop-type-conversion `ptr<char>` @16
                     (addressof `ptr<array<char; 6>>` @16
                        (string `array<char; 6>` @void "world\0")))))))))
(translation-unit "panko/tests/cases/execute/linkage/test_linkage_of_string_literals/main.c"
   (declaration external (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)) ∅)
   (declaration external (extern_fn~1 `fn() -> void` (static extern_fn)) ∅)
   (function-definition external
      (main~2 `fn() -> int` (static main))
      (compound-statement
         (expression
            (call `int` @0
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @8
                  (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)))
               (noop-type-conversion `ptr<char const>` @16
                  (noop-type-conversion `ptr<char>` @16
                     (addressof `ptr<array<char; 6>>` @16
                        (string `array<char; 6>` @void "hello\0"))))))
         (expression
            (call `void` @void
               (addressof `ptr<fn() -> void>` @0
                  (extern_fn~1 `fn() -> void` (static extern_fn))))))))

----- stderr -----
