---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/arrays/test_array_as_function_parameter.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (function-definition
      f~0 `fn(xs: ptr<int>) -> int`
      (params
         xs~1 `ptr<int>`)
      (compound-statement
         (return (add `int` (deref `int` (ptr-add `ptr<int>` (xs~1 `ptr<int>`) (sign-extend `unsigned long` (0 `int`)))) (deref `int` (ptr-add `ptr<int>` (xs~1 `ptr<int>`) (sign-extend `unsigned long` (1 `int`))))))))
   (function-definition
      main~2 `fn() -> int`
      (compound-statement
         (definition xs~3 `array<int; 2>` âˆ…)
         (expression
            (assign `int`
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (xs~3 `array<int; 2>`)))
                     (sign-extend `unsigned long` (0 `int`))))
               (4 `int`)))
         (expression
            (assign `int`
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (xs~3 `array<int; 2>`)))
                     (sign-extend `unsigned long` (1 `int`))))
               (6 `int`)))
         (return
            (call `int`
               (addressof `ptr<fn(xs: ptr<int>) -> int>`
                  (f~0 `fn(xs: ptr<int>) -> int`))
               (noop-type-conversion `ptr<int>`
                  (addressof `ptr<array<int; 2>>`
                     (xs~3 `array<int; 2>`))))))))

----- stderr -----
