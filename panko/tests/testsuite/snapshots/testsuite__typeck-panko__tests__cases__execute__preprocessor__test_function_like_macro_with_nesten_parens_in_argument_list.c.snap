---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/preprocessor/test_function_like_macro_with_nesten_parens_in_argument_list.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/preprocessor/test_function_like_macro_with_nesten_parens_in_argument_list.c"
   (function-definition
      f~0 `fn(x: int, y: int) -> int`
      (params
         x~1 `int`
         y~2 `int`)
      (compound-statement
         (return (add `int` (multiply `int` (2 `int`) (x~1 `int`)) (y~2 `int`)))))
   (function-definition
      main~3 `fn() -> int`
      (compound-statement
         (return
            (add `int`
               (subtract `int`
                  (call `int`
                     (addressof `ptr<fn(x: int, y: int) -> int>`
                        (f~0 `fn(x: int, y: int) -> int`))
                     (5 `int`)
                     (20 `int`))
                  (add `int` `int` (1 `int`)
                     (combine `int` `int`
                        (100 `int`)
                        (2 `int`))))
               (42 `int`))))))

----- stderr -----
