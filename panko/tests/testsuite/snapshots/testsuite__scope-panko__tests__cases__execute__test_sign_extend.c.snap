---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=scopes"
    - "--stop-after=scopes"
    - panko/tests/cases/execute/test_sign_extend.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition
      print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`
      (params
         argv~2 `ptr<ptr<char>>`
         l~3 `long`)
      (compound-statement
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (deref (add (name argv~2 `ptr<ptr<char>>`) 1))
               (name l~3 `long`)))))
   (function-definition
      main~4 `fn(∅: int, argv: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~5 `int`
         argv~6 `ptr<ptr<char>>`)
      (compound-statement
         (compound-statement
            (definition c~7 `signed char` (negate 42))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name c~7 `signed char`)))
            (definition s~8 `short` (name c~7 `signed char`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name s~8 `short`)))
            (definition i~9 `int` (name c~7 `signed char`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name i~9 `int`)))
            (definition j~10 `int` (name s~8 `short`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name j~10 `int`)))
            (definition l~11 `long` (name c~7 `signed char`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name l~11 `long`)))
            (definition m~12 `long` (name s~8 `short`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name m~12 `long`)))
            (definition n~13 `long` (name i~9 `int`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name n~13 `long`))))
         (compound-statement
            (definition c~14 `signed char` 42)
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name c~14 `signed char`)))
            (definition s~15 `short` (name c~14 `signed char`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name s~15 `short`)))
            (definition i~16 `int` (name c~14 `signed char`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name i~16 `int`)))
            (definition j~17 `int` (name s~15 `short`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name j~17 `int`)))
            (definition l~18 `long` (name c~14 `signed char`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name l~18 `long`)))
            (definition m~19 `long` (name s~15 `short`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name m~19 `long`)))
            (definition n~20 `long` (name i~16 `int`))
            (expression
               (call (name print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`)
                  (name argv~6 `ptr<ptr<char>>`)
                  (name n~20 `long`)))))))

----- stderr -----
