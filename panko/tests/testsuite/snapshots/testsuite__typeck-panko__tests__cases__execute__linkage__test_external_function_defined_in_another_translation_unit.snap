---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/f.c
    - panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/main.c
    - panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/x.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/f.c"
   (declaration external x~0 `int` ∅)
   (function-definition external
      f~1 `fn(y: int) -> int`
      (params
         y~2 `int`)
      (compound-statement
         (return (add `int` (x~0 `int`) (y~2 `int`))))))
(translation-unit "panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/main.c"
   (declaration external printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (declaration external f~1 `fn(∅: int) -> int` ∅)
   (declaration external x~2 `int` ∅)
   (function-definition external
      main~3 `fn() -> int`
      (compound-statement
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 4>>`
                        (string `array<char; 4>` "%d\n\0"))))
               (call `int`
                  (addressof `ptr<fn(∅: int) -> int>`
                     (f~1 `fn(∅: int) -> int`))
                  (10 `int`))))
         (expression (assign `int` (x~2 `int`) (20 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 4>>`
                        (string `array<char; 4>` "%d\n\0"))))
               (call `int`
                  (addressof `ptr<fn(∅: int) -> int>`
                     (f~1 `fn(∅: int) -> int`))
                  (123 `int`)))))))
(translation-unit "panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/x.c"
   (definition external x~0 `int` (5 `int`)))

----- stderr -----
