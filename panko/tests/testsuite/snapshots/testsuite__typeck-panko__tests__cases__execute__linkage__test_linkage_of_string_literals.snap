---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/linkage/test_linkage_of_string_literals/extern_fn.c
    - panko/tests/cases/execute/linkage/test_linkage_of_string_literals/main.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/linkage/test_linkage_of_string_literals/extern_fn.c"
   (declaration external puts~0 `fn(∅: ptr<char const>) -> int` ∅)
   (function-definition external
      extern_fn~1 `fn() -> void`
      (compound-statement
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>) -> int>`
                  (puts~0 `fn(∅: ptr<char const>) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 6>>`
                        (string `array<char; 6>` "world\0")))))))))
(translation-unit "panko/tests/cases/execute/linkage/test_linkage_of_string_literals/main.c"
   (declaration external puts~0 `fn(∅: ptr<char const>) -> int` ∅)
   (declaration external extern_fn~1 `fn() -> void` ∅)
   (function-definition external
      main~2 `fn() -> int`
      (compound-statement
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>) -> int>`
                  (puts~0 `fn(∅: ptr<char const>) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 6>>`
                        (string `array<char; 6>` "hello\0"))))))
         (expression
            (call `void`
               (addressof `ptr<fn() -> void>`
                  (extern_fn~1 `fn() -> void`)))))))

----- stderr -----
