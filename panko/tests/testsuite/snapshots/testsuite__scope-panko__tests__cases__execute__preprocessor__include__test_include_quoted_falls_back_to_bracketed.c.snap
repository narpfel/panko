---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=scopes"
    - "--stop-after=scopes"
    - panko/tests/cases/execute/preprocessor/include/test_include_quoted_falls_back_to_bracketed.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/preprocessor/include/test_include_quoted_falls_back_to_bracketed.c"
   (declaration __assert_fail~0 `fn(__assertion: ptr<char const>, __file: ptr<char const>, __line: unsigned int, __function: ptr<char const>) -> void` ∅)
   (declaration __assert_perror_fail~1 `fn(__errnum: int, __file: ptr<char const>, __line: unsigned int, __function: ptr<char const>) -> void` ∅)
   (declaration __assert~2 `fn(__assertion: ptr<char const>, __file: ptr<char const>, __line: int) -> void` ∅)
   (typedef ptrdiff_t `typeof((subtract (cast `ptr<char>` nullptr) (cast `ptr<char>` nullptr)))`)
   (typedef size_t `typeof((sizeof `char`))`)
   (typedef max_align_t `long long`)
   (typedef wchar_t `int`)
   (typedef nullptr_t `typeof(nullptr)`)
   (function-definition
      main~3 `fn() -> int`
      (compound-statement
         (declaration xs~4 `array<int; ∅>`
            (braced
               1
               2))
         (expression
            (conditional
               (logical-or
                  (generic
                     (sizeof 42)
                     (assoc `typeof((sizeof `char`))` 0))
                  (generic
                     (subtract (addressof (subscript (name xs~4 `array<int; ∅>`) 1)) (addressof (subscript (name xs~4 `array<int; ∅>`) 0)))
                     (assoc `typeof((subtract (cast `ptr<char>` nullptr) (cast `ptr<char>` nullptr)))` 1)))
               (cast `void` 0)
               (call (name __assert_fail~0 `fn(__assertion: ptr<char const>, __file: ptr<char const>, __line: unsigned int, __function: ptr<char const>) -> void`)
                  (string "_Generic(sizeof 42, size_t: 0) || _Generic(&xs[1] - &xs[0], ptrdiff_t: 1)")
                  (string "/usr/include/assert.h")
                  108
                  (cast `ptr<char const>` 0))))
         (return
            (logical-or
               (generic
                  (sizeof 42)
                  (assoc `typeof((sizeof `char`))` 0))
               (generic
                  (subtract (addressof (subscript (name xs~4 `array<int; ∅>`) 1)) (addressof (subscript (name xs~4 `array<int; ∅>`) 0)))
                  (assoc `typeof((subtract (cast `ptr<char>` nullptr) (cast `ptr<char>` nullptr)))` 1)))))))

----- stderr -----
