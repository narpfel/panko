---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/subscript/test_subscript_multidimensional_array.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition
      main~1 `fn() -> int`
      (compound-statement
         (definition xss~2 `array<array<int; (constexpr 30)>; (constexpr 20)>` (braced ∅))
         (expression
            (assign `int`
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; (constexpr 30)>>`
                           (deref `array<int; (constexpr 30)>`
                              (ptr-add `ptr<array<int; (constexpr 30)>>`
                                 (noop-type-conversion `ptr<array<int; (constexpr 30)>>`
                                    (addressof `ptr<array<array<int; (constexpr 30)>; (constexpr 20)>>`
                                       (xss~2 `array<array<int; (constexpr 30)>; (constexpr 20)>`)))
                                 (sign-extend `unsigned long` (2 `int`))))))
                     (sign-extend `unsigned long` (3 `int`))))
               (42 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; (constexpr 4)>>`
                        (string `array<char; (constexpr 4)>` "%d\n\0"))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; (constexpr 30)>>`
                           (deref `array<int; (constexpr 30)>`
                              (ptr-add `ptr<array<int; (constexpr 30)>>`
                                 (noop-type-conversion `ptr<array<int; (constexpr 30)>>`
                                    (addressof `ptr<array<array<int; (constexpr 30)>; (constexpr 20)>>`
                                       (xss~2 `array<array<int; (constexpr 30)>; (constexpr 20)>`)))
                                 (sign-extend `unsigned long` (2 `int`))))))
                     (sign-extend `unsigned long` (3 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; (constexpr 5)>>`
                        (string `array<char; (constexpr 5)>` "%zu\n\0"))))
               (sizeof `unsigned long` 2400 (xss~2 `array<array<int; (constexpr 30)>; (constexpr 20)>`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; (constexpr 5)>>`
                        (string `array<char; (constexpr 5)>` "%zu\n\0"))))
               (sizeof `unsigned long` 120
                  (deref `array<int; (constexpr 30)>`
                     (ptr-add `ptr<array<int; (constexpr 30)>>`
                        (noop-type-conversion `ptr<array<int; (constexpr 30)>>`
                           (addressof `ptr<array<array<int; (constexpr 30)>; (constexpr 20)>>`
                              (xss~2 `array<array<int; (constexpr 30)>; (constexpr 20)>`)))
                        (sign-extend `unsigned long` (0 `int`)))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; (constexpr 5)>>`
                        (string `array<char; (constexpr 5)>` "%zu\n\0"))))
               (lengthof `unsigned long` 20 (xss~2 `array<array<int; (constexpr 30)>; (constexpr 20)>`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; (constexpr 5)>>`
                        (string `array<char; (constexpr 5)>` "%zu\n\0"))))
               (lengthof `unsigned long` 30
                  (deref `array<int; (constexpr 30)>`
                     (ptr-add `ptr<array<int; (constexpr 30)>>`
                        (noop-type-conversion `ptr<array<int; (constexpr 30)>>`
                           (addressof `ptr<array<array<int; (constexpr 30)>; (constexpr 20)>>`
                              (xss~2 `array<array<int; (constexpr 30)>; (constexpr 20)>`)))
                        (sign-extend `unsigned long` (0 `int`))))))))))

----- stderr -----
