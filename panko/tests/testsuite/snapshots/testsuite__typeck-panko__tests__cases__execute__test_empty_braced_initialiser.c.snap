---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/test_empty_braced_initialiser.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/test_empty_braced_initialiser.c"
   (declaration external printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition external
      main~1 `fn(∅: int, argv: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~2 `int`
         argv~3 `ptr<ptr<char>>`)
      (compound-statement
         (definition zero~4 `int` (braced ∅))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (zero~4 `int`)))
         (definition zeros~5 `array<int; 3>` (braced ∅))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 3>>`
                           (zeros~5 `array<int; 3>`)))
                     (sign-extend `unsigned long` (0 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 3>>`
                           (zeros~5 `array<int; 3>`)))
                     (sign-extend `unsigned long` (1 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 3>>`
                           (zeros~5 `array<int; 3>`)))
                     (sign-extend `unsigned long` (2 `int`))))))
         (definition long_zero~6 `long` (braced ∅))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (2 `int`)))))
               (long_zero~6 `long`))))))

----- stderr -----
