---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=scopes"
    - "--stop-after=scopes"
    - panko/tests/cases/execute/subscript/test_subscript_multidimensional_array.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/subscript/test_subscript_multidimensional_array.c"
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition
      main~1 `fn() -> int`
      (compound-statement
         (declaration xss~2 `array<array<int; 30>; 20>` (braced ∅))
         (expression (assign (subscript (subscript (name xss~2 `array<array<int; 30>; 20>`) 2) 3) 42))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%d\n")
               (subscript (subscript (name xss~2 `array<array<int; 30>; 20>`) 2) 3)))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%zu\n")
               (sizeof (name xss~2 `array<array<int; 30>; 20>`))))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%zu\n")
               (sizeof (subscript (name xss~2 `array<array<int; 30>; 20>`) 0))))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%zu\n")
               (lengthof (name xss~2 `array<array<int; 30>; 20>`))))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%zu\n")
               (lengthof (subscript (name xss~2 `array<array<int; 30>; 20>`) 0)))))))

----- stderr -----
