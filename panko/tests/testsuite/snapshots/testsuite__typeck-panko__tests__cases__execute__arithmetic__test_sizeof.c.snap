---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/arithmetic/test_sizeof.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (declaration calloc~1 `fn(∅: unsigned long, ∅: unsigned long) -> ptr<void>` ∅)
   (function-definition
      main~2 `fn(∅: int, argv: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~3 `int`
         argv~4 `ptr<ptr<char>>`)
      (compound-statement
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 1 `char` `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 1 `char const` `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 8 `ptr<char const>` `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 8 `ptr<char>` `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 8 `ptr<fn(∅: int, ∅: int) -> void>` `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 2 `unsigned short` `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 4 `int` `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 8 `long` `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 8 `long long` `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 8 `ptr<void>` `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 4 (42 `int`) `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 4 (42u `unsigned int`) `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 8 (42l `long`) `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~4 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>` `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 8 (sizeof 4 (42 `int`) `unsigned long`) `unsigned long`)
               `int`))
         (definition p~5 `ptr<int>`
            (noop-type-conversion
               (call
                  (addressof
                     (calloc~1 `fn(∅: unsigned long, ∅: unsigned long) -> ptr<void>`)
                     `ptr<fn(∅: unsigned long, ∅: unsigned long) -> ptr<void>>`)
                  (sign-extend (1 `int`) `unsigned long`)
                  (sizeof 4 (deref (p~5 `ptr<int>`) `int`) `unsigned long`)
                  `ptr<void>`)
               `ptr<int>`))
         (return
            (truncate
               (add (sign-extend (deref (p~5 `ptr<int>`) `int`) `unsigned long`)
                  (sizeof 8
                     (addressof
                        (calloc~1 `fn(∅: unsigned long, ∅: unsigned long) -> ptr<void>`)
                        `ptr<fn(∅: unsigned long, ∅: unsigned long) -> ptr<void>>`)
                     `unsigned long`)
                  `unsigned long`)
               `int`)))))

----- stderr -----
