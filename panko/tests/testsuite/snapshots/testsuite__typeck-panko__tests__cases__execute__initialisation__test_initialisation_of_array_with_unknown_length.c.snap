---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/initialisation/test_initialisation_of_array_with_unknown_length.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition
      main~1 `fn(∅: int, argv: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~2 `int`
         argv~3 `ptr<ptr<char>>`)
      (compound-statement
         (definition xs~4 `array<int; (constexpr 3)>`
            (braced
               (subobject +0 (42 `int`))
               (subobject +4 (27 `int`))
               (subobject +8 (5 `int`))))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~3 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (deref
                  (ptr-add
                     (noop-type-conversion
                        (addressof
                           (xs~4 `array<int; (constexpr 3)>`)
                           `ptr<array<int; (constexpr 3)>>`)
                        `ptr<int>`)
                     (sign-extend (0 `int`) `unsigned long`)
                     `ptr<int>`)
                  `int`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~3 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (deref
                  (ptr-add
                     (noop-type-conversion
                        (addressof
                           (xs~4 `array<int; (constexpr 3)>`)
                           `ptr<array<int; (constexpr 3)>>`)
                        `ptr<int>`)
                     (sign-extend (1 `int`) `unsigned long`)
                     `ptr<int>`)
                  `int`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~3 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (deref
                  (ptr-add
                     (noop-type-conversion
                        (addressof
                           (xs~4 `array<int; (constexpr 3)>`)
                           `ptr<array<int; (constexpr 3)>>`)
                        `ptr<int>`)
                     (sign-extend (2 `int`) `unsigned long`)
                     `ptr<int>`)
                  `int`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~3 `ptr<ptr<char>>`) (sign-extend (2 `int`) `unsigned long`) `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (sizeof 12 (xs~4 `array<int; (constexpr 3)>`) `unsigned long`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~3 `ptr<ptr<char>>`) (sign-extend (2 `int`) `unsigned long`) `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (lengthof 3 (xs~4 `array<int; (constexpr 3)>`) `unsigned long`)
               `int`)))))

----- stderr -----
