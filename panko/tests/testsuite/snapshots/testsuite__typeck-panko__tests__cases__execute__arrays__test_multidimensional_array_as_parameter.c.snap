---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/arrays/test_multidimensional_array_as_parameter.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/arrays/test_multidimensional_array_as_parameter.c"
   (function-definition external
      f~0 `fn(xs: ptr<array<int; 2>>) -> int`
      (params
         xs~1 `ptr<array<int; 2>>`)
      (compound-statement
         (return
            (add `int`
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>` (ptr-add `ptr<array<int; 2>>` (xs~1 `ptr<array<int; 2>>`) (sign-extend `unsigned long` (0 `int`))))))
                     (sign-extend `unsigned long` (0 `int`))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>` (ptr-add `ptr<array<int; 2>>` (xs~1 `ptr<array<int; 2>>`) (sign-extend `unsigned long` (1 `int`))))))
                     (sign-extend `unsigned long` (1 `int`))))))))
   (function-definition external
      main~2 `fn() -> int`
      (compound-statement
         (definition xs~3 `array<array<int; 2>; 2>` âˆ…)
         (expression
            (assign `int`
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (xs~3 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (0 `int`))))))
                     (sign-extend `unsigned long` (0 `int`))))
               (4 `int`)))
         (expression
            (assign `int`
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (xs~3 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (1 `int`))))))
                     (sign-extend `unsigned long` (1 `int`))))
               (6 `int`)))
         (return
            (call `int`
               (addressof `ptr<fn(xs: ptr<array<int; 2>>) -> int>`
                  (f~0 `fn(xs: ptr<array<int; 2>>) -> int`))
               (noop-type-conversion `ptr<array<int; 2>>`
                  (addressof `ptr<array<array<int; 2>; 2>>`
                     (xs~3 `array<array<int; 2>; 2>`))))))))

----- stderr -----
