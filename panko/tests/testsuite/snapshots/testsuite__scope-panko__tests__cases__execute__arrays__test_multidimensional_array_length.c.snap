---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=scopes"
    - "--stop-after=scopes"
    - panko/tests/cases/execute/arrays/test_multidimensional_array_length.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/arrays/test_multidimensional_array_length.c"
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition
      main~1 `fn(∅: int, argv: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~2 `int`
         argv~3 `ptr<ptr<char>>`)
      (compound-statement
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (subscript (name argv~3 `ptr<ptr<char>>`) 1)
               (lengthof `array<array<ptr<long>; 400>; 100>`)))
         (declaration xs~4 `array<array<int; 27>; 42>` ∅)
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (subscript (name argv~3 `ptr<ptr<char>>`) 1)
               (lengthof (name xs~4 `array<array<int; 27>; 42>`))))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (subscript (name argv~3 `ptr<ptr<char>>`) 1)
               (lengthof (deref (name xs~4 `array<array<int; 27>; 42>`)))))
         (declaration ys~5 `ptr<array<array<int; 27>; 42>>` ∅)
         (return (add (lengthof (deref (name ys~5 `ptr<array<array<int; 27>; 42>>`))) (lengthof (deref (deref (name ys~5 `ptr<array<array<int; 27>; 42>>`)))))))))

----- stderr -----
