---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/arithmetic/test_postincrement.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration putchar~0 `fn(∅: int) -> int` ∅)
   (declaration printf~1 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition
      f~2 `fn(p: ptr<int>) -> ptr<int>`
      (params
         p~3 `ptr<int>`)
      (compound-statement
         (expression
            (call
               (addressof
                  (putchar~0 `fn(∅: int) -> int`)
                  `ptr<fn(∅: int) -> int>`)
               (65 `int`)
               `int`))
         (expression
            (call
               (addressof
                  (putchar~0 `fn(∅: int) -> int`)
                  `ptr<fn(∅: int) -> int>`)
               (10 `int`)
               `int`))
         (return (p~3 `ptr<int>`))))
   (function-definition
      main~4 `fn(∅: int, argv: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~5 `int`
         argv~6 `ptr<ptr<char>>`)
      (compound-statement
         (definition x~7 `int` (42 `int`))
         (expression
            (call
               (addressof
                  (printf~1 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~6 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (combine
                  (combine
                     (combine
                        (assign (unnamed-temporary~9 `ptr<int>`)
                           (addressof
                              (x~7 `int`)
                              `ptr<int>`)
                           `ptr<int>`)
                        (assign (unnamed-temporary~10 `int`) (deref (unnamed-temporary~9 `ptr<int>`) `int`) `int`)
                        `int`)
                     (combine
                        (assign (unnamed-temporary~8 `ptr<int>`)
                           (addressof
                              (deref (unnamed-temporary~9 `ptr<int>`) `int`)
                              `ptr<int>`)
                           `ptr<int>`)
                        (assign (deref (unnamed-temporary~8 `ptr<int>`) `int`) (add (deref (unnamed-temporary~8 `ptr<int>`) `int`) (++ `int`) `int`) `int`)
                        `int`)
                     `int`)
                  (unnamed-temporary~10 `int`)
                  `int`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~1 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~6 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (x~7 `int`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~1 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~6 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (combine
                  (combine
                     (combine
                        (assign (unnamed-temporary~12 `ptr<int>`)
                           (addressof
                              (deref
                                 (call
                                    (addressof
                                       (f~2 `fn(p: ptr<int>) -> ptr<int>`)
                                       `ptr<fn(p: ptr<int>) -> ptr<int>>`)
                                    (addressof
                                       (x~7 `int`)
                                       `ptr<int>`)
                                    `ptr<int>`)
                                 `int`
                                 `int`)
                              `ptr<int>`)
                           `ptr<int>`)
                        (assign (unnamed-temporary~13 `int`) (deref (unnamed-temporary~12 `ptr<int>`) `int`) `int`)
                        `int`)
                     (combine
                        (assign (unnamed-temporary~11 `ptr<int>`)
                           (addressof
                              (deref (unnamed-temporary~12 `ptr<int>`) `int`)
                              `ptr<int>`)
                           `ptr<int>`)
                        (assign (deref (unnamed-temporary~11 `ptr<int>`) `int`) (add (deref (unnamed-temporary~11 `ptr<int>`) `int`) (++ `int`) `int`) `int`)
                        `int`)
                     `int`)
                  (unnamed-temporary~13 `int`)
                  `int`)
               `int`))
         (expression
            (call
               (addressof
                  (printf~1 `fn(∅: ptr<char const>, ...) -> int`)
                  `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (deref (ptr-add (argv~6 `ptr<ptr<char>>`) (sign-extend (1 `int`) `unsigned long`) `ptr<ptr<char>>`) `ptr<char>`) `ptr<char const>`)
               (x~7 `int`)
               `int`))
         (return (x~7 `int`)))))

----- stderr -----
