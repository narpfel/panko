---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/test_comma.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/test_comma.c"
   (declaration external (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)) ∅)
   (function-definition external
      (main~1 `fn(∅: int, argv: ptr<ptr<char>>) -> int` (static main))
      (params
         (main.unnamed_parameter.0~2 `int` @0)
         (argv~3 `ptr<ptr<char>>` @8))
      (compound-statement
         (expression
            (combine `int` @16
               (call `int` @52
                  (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @56
                     (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
                  (noop-type-conversion `ptr<char const>` @64
                     (deref `ptr<char>` @64
                        (ptr-add `ptr<ptr<char>>` @72
                           (argv~3 `ptr<ptr<char>>` @8)
                           (sign-extend `unsigned long` @80 (1 `int` @88)))))
                  (42 `int` @80))
               (call `int` @16
                  (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                     (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
                  (noop-type-conversion `ptr<char const>` @32
                     (deref `ptr<char>` @32
                        (ptr-add `ptr<ptr<char>>` @40
                           (argv~3 `ptr<ptr<char>>` @8)
                           (sign-extend `unsigned long` @48 (1 `int` @56)))))
                  (27 `int` @48))))
         (expression
            (combine `int` @16
               (0 `int` @52)
               (call `int` @16
                  (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                     (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
                  (noop-type-conversion `ptr<char const>` @32
                     (deref `ptr<char>` @32
                        (ptr-add `ptr<ptr<char>>` @40
                           (argv~3 `ptr<ptr<char>>` @8)
                           (sign-extend `unsigned long` @48 (1 `int` @56)))))
                  (123 `int` @48))))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~3 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (combine `int` @48
                  (combine `int` @56
                     (combine `int` @60
                        (0 `int` @64)
                        (42 `int` @60))
                     (1 `int` @56))
                  (combine `int` @48
                     (2 `int` @52)
                     (3 `int` @48)))))
         (return
            (combine `int` @16
               (combine `int` @20
                  (0 `int` @24)
                  (1 `int` @20))
               (2 `int` @16))))))

----- stderr -----
