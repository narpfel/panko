---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/arrays/test_char_pointer_array_initialised_with_string_literals.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/arrays/test_char_pointer_array_initialised_with_string_literals.c"
   (declaration external (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)) ∅)
   (function-definition external
      (main~1 `fn() -> int` (static main))
      (compound-statement
         (definition (hello_world~2 `array<ptr<char const>; 3>` @0)
            (braced
               (subobject +0
                  (noop-type-conversion `ptr<char const>` @0
                     (noop-type-conversion `ptr<char>` @0
                        (addressof `ptr<array<char; 6>>` @0
                           (string `array<char; 6>` @void "hello\0")))))
               (subobject +8
                  (noop-type-conversion `ptr<char const>` @8
                     (noop-type-conversion `ptr<char>` @8
                        (addressof `ptr<array<char; 6>>` @8
                           (string `array<char; 6>` @void "world\0")))))
               (subobject +16
                  (noop-type-conversion `ptr<char const>` @16
                     (noop-type-conversion `ptr<char>` @16
                        (addressof `ptr<array<char; 13>>` @16
                           (string `array<char; 13>` @void "or something\0")))))))
         (expression
            (call `int` @24
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @32
                  (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)))
               (deref `ptr<char const>` @40
                  (ptr-add `ptr<ptr<char const>>` @48
                     (noop-type-conversion `ptr<ptr<char const>>` @48
                        (addressof `ptr<array<ptr<char const>; 3>>` @48
                           (hello_world~2 `array<ptr<char const>; 3>` @0)))
                     (sign-extend `unsigned long` @56 (0 `int` @64))))))
         (expression
            (call `int` @24
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @32
                  (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)))
               (deref `ptr<char const>` @40
                  (ptr-add `ptr<ptr<char const>>` @48
                     (noop-type-conversion `ptr<ptr<char const>>` @48
                        (addressof `ptr<array<ptr<char const>; 3>>` @48
                           (hello_world~2 `array<ptr<char const>; 3>` @0)))
                     (sign-extend `unsigned long` @56 (1 `int` @64))))))
         (expression
            (call `int` @24
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @32
                  (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)))
               (deref `ptr<char const>` @40
                  (ptr-add `ptr<ptr<char const>>` @48
                     (noop-type-conversion `ptr<ptr<char const>>` @48
                        (addressof `ptr<array<ptr<char const>; 3>>` @48
                           (hello_world~2 `array<ptr<char const>; 3>` @0)))
                     (sign-extend `unsigned long` @56 (2 `int` @64)))))))))

----- stderr -----
