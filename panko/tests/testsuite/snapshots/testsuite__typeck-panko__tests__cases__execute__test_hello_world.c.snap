---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/test_hello_world.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/test_hello_world.c"
   (declaration external putchar~0 `fn(∅: int) -> int` ∅)
   (function-definition external
      main~1 `fn() -> int`
      (compound-statement
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (104 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (101 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (108 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (108 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (111 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (32 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (119 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (111 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (114 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (108 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (100 `int`)))
         (return
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (10 `int`))))))

----- stderr -----
