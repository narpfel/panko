---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/initialisation/test_nonempty_braced_initialisation_of_static_storage_duration_variable.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)) ∅)
   (definition (xs~1 `array<int; (constexpr 100)>` (static xs))
      (braced
         (subobject +0 (42 `int` (static xs +0)))
         (subobject +4 (27 `int` (static xs +4)))
         (subobject +8 (5 `int` (static xs +8)))
         (subobject +12 (2147483647 `int` (static xs +12)))))
   (definition (value~2 `int` (static value))
      (braced
         (subobject +0 (123 `int` (static value +0)))))
   (function-definition
      (main~3 `fn(∅: int, ∅: ptr<ptr<char>>) -> int` (static main))
      (params
         (main.unnamed_parameter.0~4 `int` @0)
         (main.unnamed_parameter.1~5 `ptr<ptr<char>>` @8))
      (compound-statement
         (definition (s~6 `array<char; (constexpr 100)>` @16)
            (braced
               (subobject +0 (truncate `char` @16 (37 `int` @116)))
               (subobject +1 (truncate `char` @17 (100 `int` @116)))
               (subobject +2 (truncate `char` @18 (10 `int` @116)))))
         (expression
            (call `int` @116
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @120
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @128
                  (noop-type-conversion `ptr<char>` @128
                     (addressof `ptr<array<char; (constexpr 100)>>` @128
                        (s~6 `array<char; (constexpr 100)>` @16))))
               (deref `int` @136
                  (ptr-add `ptr<int>` @144
                     (noop-type-conversion `ptr<int>` @144
                        (addressof `ptr<array<int; (constexpr 100)>>` @144
                           (xs~1 `array<int; (constexpr 100)>` (static xs))))
                     (sign-extend `unsigned long` @152 (0 `int` @160))))))
         (expression
            (call `int` @116
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @120
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @128
                  (noop-type-conversion `ptr<char>` @128
                     (addressof `ptr<array<char; (constexpr 100)>>` @128
                        (s~6 `array<char; (constexpr 100)>` @16))))
               (deref `int` @136
                  (ptr-add `ptr<int>` @144
                     (noop-type-conversion `ptr<int>` @144
                        (addressof `ptr<array<int; (constexpr 100)>>` @144
                           (xs~1 `array<int; (constexpr 100)>` (static xs))))
                     (sign-extend `unsigned long` @152 (1 `int` @160))))))
         (expression
            (call `int` @116
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @120
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @128
                  (noop-type-conversion `ptr<char>` @128
                     (addressof `ptr<array<char; (constexpr 100)>>` @128
                        (s~6 `array<char; (constexpr 100)>` @16))))
               (deref `int` @136
                  (ptr-add `ptr<int>` @144
                     (noop-type-conversion `ptr<int>` @144
                        (addressof `ptr<array<int; (constexpr 100)>>` @144
                           (xs~1 `array<int; (constexpr 100)>` (static xs))))
                     (sign-extend `unsigned long` @152 (2 `int` @160))))))
         (expression
            (call `int` @116
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @120
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @128
                  (noop-type-conversion `ptr<char>` @128
                     (addressof `ptr<array<char; (constexpr 100)>>` @128
                        (s~6 `array<char; (constexpr 100)>` @16))))
               (deref `int` @136
                  (ptr-add `ptr<int>` @144
                     (noop-type-conversion `ptr<int>` @144
                        (addressof `ptr<array<int; (constexpr 100)>>` @144
                           (xs~1 `array<int; (constexpr 100)>` (static xs))))
                     (sign-extend `unsigned long` @152 (3 `int` @160))))))
         (expression
            (call `int` @116
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @120
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @128
                  (noop-type-conversion `ptr<char>` @128
                     (addressof `ptr<array<char; (constexpr 100)>>` @128
                        (s~6 `array<char; (constexpr 100)>` @16))))
               (deref `int` @136
                  (ptr-add `ptr<int>` @144
                     (noop-type-conversion `ptr<int>` @144
                        (addressof `ptr<array<int; (constexpr 100)>>` @144
                           (xs~1 `array<int; (constexpr 100)>` (static xs))))
                     (sign-extend `unsigned long` @152 (4 `int` @160))))))
         (expression
            (call `int` @116
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @120
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @128
                  (noop-type-conversion `ptr<char>` @128
                     (addressof `ptr<array<char; (constexpr 100)>>` @128
                        (s~6 `array<char; (constexpr 100)>` @16))))
               (deref `int` @136
                  (ptr-add `ptr<int>` @144
                     (noop-type-conversion `ptr<int>` @144
                        (addressof `ptr<array<int; (constexpr 100)>>` @144
                           (xs~1 `array<int; (constexpr 100)>` (static xs))))
                     (sign-extend `unsigned long` @152 (99 `int` @160))))))
         (expression
            (call `int` @116
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @120
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @128
                  (noop-type-conversion `ptr<char>` @128
                     (addressof `ptr<array<char; (constexpr 100)>>` @128
                        (s~6 `array<char; (constexpr 100)>` @16))))
               (value~2 `int` (static value)))))))

----- stderr -----
