---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/test_sign_extend.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition
      print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`
      (params
         argv~2 `ptr<ptr<char>>`
         l~3 `long`)
      (compound-statement
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` `ptr<ptr<char>>` (argv~2 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (l~3 `long`)))))
   (function-definition
      main~4 `fn(∅: int, argv: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~5 `int`
         argv~6 `ptr<ptr<char>>`)
      (compound-statement
         (compound-statement
            (definition c~7 `signed char` (truncate `signed char` (negate `int` (42 `int`))))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (sign-extend `long` (c~7 `signed char`))))
            (definition s~8 `short` (sign-extend `short` (c~7 `signed char`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (sign-extend `long` (s~8 `short`))))
            (definition i~9 `int` (sign-extend `int` (c~7 `signed char`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (sign-extend `long` (i~9 `int`))))
            (definition j~10 `int` (sign-extend `int` (s~8 `short`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (sign-extend `long` (j~10 `int`))))
            (definition l~11 `long` (sign-extend `long` (c~7 `signed char`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (l~11 `long`)))
            (definition m~12 `long` (sign-extend `long` (s~8 `short`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (m~12 `long`)))
            (definition n~13 `long` (sign-extend `long` (i~9 `int`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (n~13 `long`))))
         (compound-statement
            (definition c~14 `signed char` (truncate `signed char` (42 `int`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (sign-extend `long` (c~14 `signed char`))))
            (definition s~15 `short` (sign-extend `short` (c~14 `signed char`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (sign-extend `long` (s~15 `short`))))
            (definition i~16 `int` (sign-extend `int` (c~14 `signed char`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (sign-extend `long` (i~16 `int`))))
            (definition j~17 `int` (sign-extend `int` (s~15 `short`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (sign-extend `long` (j~17 `int`))))
            (definition l~18 `long` (sign-extend `long` (c~14 `signed char`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (l~18 `long`)))
            (definition m~19 `long` (sign-extend `long` (s~15 `short`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (m~19 `long`)))
            (definition n~20 `long` (sign-extend `long` (i~16 `int`)))
            (expression
               (call `void`
                  (addressof `ptr<fn(argv: ptr<ptr<char>>, l: long) -> void>`
                     (print~1 `fn(argv: ptr<ptr<char>>, l: long) -> void`))
                  (argv~6 `ptr<ptr<char>>`)
                  (n~20 `long`)))))))

----- stderr -----
