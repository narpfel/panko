---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/initialisation/test_initialisation_of_array_with_unknown_length.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/initialisation/test_initialisation_of_array_with_unknown_length.c"
   (declaration external (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)) ∅)
   (function-definition external
      (main~1 `fn(∅: int, argv: ptr<ptr<char>>) -> int` (static main))
      (params
         (main.unnamed_parameter.0~2 `int` @0)
         (argv~3 `ptr<ptr<char>>` @8))
      (compound-statement
         (definition (xs~4 `array<int; 3>` @16)
            (braced
               (subobject +0 (42 `int` @16))
               (subobject +4 (27 `int` @20))
               (subobject +8 (5 `int` @24))))
         (expression
            (call `int` @28
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @32
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @40
                  (deref `ptr<char>` @40
                     (ptr-add `ptr<ptr<char>>` @48
                        (argv~3 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @56 (1 `int` @64)))))
               (deref `int` @56
                  (ptr-add `ptr<int>` @64
                     (noop-type-conversion `ptr<int>` @64
                        (addressof `ptr<array<int; 3>>` @64
                           (xs~4 `array<int; 3>` @16)))
                     (sign-extend `unsigned long` @72 (0 `int` @80))))))
         (expression
            (call `int` @28
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @32
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @40
                  (deref `ptr<char>` @40
                     (ptr-add `ptr<ptr<char>>` @48
                        (argv~3 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @56 (1 `int` @64)))))
               (deref `int` @56
                  (ptr-add `ptr<int>` @64
                     (noop-type-conversion `ptr<int>` @64
                        (addressof `ptr<array<int; 3>>` @64
                           (xs~4 `array<int; 3>` @16)))
                     (sign-extend `unsigned long` @72 (1 `int` @80))))))
         (expression
            (call `int` @28
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @32
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @40
                  (deref `ptr<char>` @40
                     (ptr-add `ptr<ptr<char>>` @48
                        (argv~3 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @56 (1 `int` @64)))))
               (deref `int` @56
                  (ptr-add `ptr<int>` @64
                     (noop-type-conversion `ptr<int>` @64
                        (addressof `ptr<array<int; 3>>` @64
                           (xs~4 `array<int; 3>` @16)))
                     (sign-extend `unsigned long` @72 (2 `int` @80))))))
         (expression
            (call `int` @28
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @32
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @40
                  (deref `ptr<char>` @40
                     (ptr-add `ptr<ptr<char>>` @48
                        (argv~3 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @56 (2 `int` @64)))))
               (12 `unsigned long` @56)))
         (expression
            (call `int` @28
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @32
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @40
                  (deref `ptr<char>` @40
                     (ptr-add `ptr<ptr<char>>` @48
                        (argv~3 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @56 (2 `int` @64)))))
               (3 `unsigned long` @56))))))

----- stderr -----
