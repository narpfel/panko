---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/arithmetic/test_postdecrement.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/arithmetic/test_postdecrement.c"
   (declaration external putchar~0 `fn(∅: int) -> int` ∅)
   (declaration external printf~1 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition external
      f~2 `fn(p: ptr<int>) -> ptr<int>`
      (params
         p~3 `ptr<int>`)
      (compound-statement
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (65 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: int) -> int>`
                  (putchar~0 `fn(∅: int) -> int`))
               (10 `int`)))
         (return (p~3 `ptr<int>`))))
   (function-definition external
      main~4 `fn(∅: int, argv: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~5 `int`
         argv~6 `ptr<ptr<char>>`)
      (compound-statement
         (definition x~7 `int` (42 `int`))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~1 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~6 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (combine `int`
                  (combine `int`
                     (combine `int`
                        (assign `ptr<int>` (unnamed-temporary~9 `ptr<int>`)
                           (addressof `ptr<int>`
                              (x~7 `int`)))
                        (assign `int` (unnamed-temporary~10 `int`) (deref `int` (unnamed-temporary~9 `ptr<int>`))))
                     (combine `int`
                        (assign `ptr<int>` (unnamed-temporary~8 `ptr<int>`)
                           (addressof `ptr<int>`
                              (deref `int` (unnamed-temporary~9 `ptr<int>`))))
                        (assign `int` (deref `int` (unnamed-temporary~8 `ptr<int>`)) (subtract `int` (deref `int` (unnamed-temporary~8 `ptr<int>`)) (-- `int`)))))
                  (unnamed-temporary~10 `int`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~1 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~6 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (x~7 `int`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~1 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~6 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (combine `int`
                  (combine `int`
                     (combine `int`
                        (assign `ptr<int>` (unnamed-temporary~12 `ptr<int>`)
                           (addressof `ptr<int>`
                              (deref `int` `int`
                                 (call `ptr<int>`
                                    (addressof `ptr<fn(p: ptr<int>) -> ptr<int>>`
                                       (f~2 `fn(p: ptr<int>) -> ptr<int>`))
                                    (addressof `ptr<int>`
                                       (x~7 `int`))))))
                        (assign `int` (unnamed-temporary~13 `int`) (deref `int` (unnamed-temporary~12 `ptr<int>`))))
                     (combine `int`
                        (assign `ptr<int>` (unnamed-temporary~11 `ptr<int>`)
                           (addressof `ptr<int>`
                              (deref `int` (unnamed-temporary~12 `ptr<int>`))))
                        (assign `int` (deref `int` (unnamed-temporary~11 `ptr<int>`)) (subtract `int` (deref `int` (unnamed-temporary~11 `ptr<int>`)) (-- `int`)))))
                  (unnamed-temporary~13 `int`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~1 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~6 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (x~7 `int`)))
         (return (x~7 `int`)))))

----- stderr -----
