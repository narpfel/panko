---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/char/test_signed_unsigned_char.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/char/test_signed_unsigned_char.c"
   (declaration external (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)) ∅)
   (function-definition external
      (main~1 `fn() -> int` (static main))
      (compound-statement
         (definition (a~2 `char` @0) (truncate `char` @0 (97 `int` @4)))
         (definition (b~3 `unsigned char` @1) (truncate `unsigned char` @1 (98 `int` @4)))
         (definition (c~4 `signed char` @2) (truncate `signed char` @2 (99 `int` @4)))
         (expression
            (call `int` @4
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @8
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @16
                  (noop-type-conversion `ptr<char>` @16
                     (addressof `ptr<array<char; 8>>` @16
                        (string `array<char; 8>` @void "%c%c%c\n\0"))))
               (sign-extend `int` @24 (a~2 `char` @0))
               (zero-extend `int` @28 (b~3 `unsigned char` @1))
               (sign-extend `int` @32 (c~4 `signed char` @2))))
         (definition (x~5 `unsigned char` @3) (truncate `unsigned char` @3 (200 `int` @4)))
         (definition (y~6 `signed char` @4) (truncate `signed char` @4 (negate `int` @8 (5 `int` @8))))
         (expression
            (call `int` @8
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @16
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @24
                  (noop-type-conversion `ptr<char>` @24
                     (addressof `ptr<array<char; 4>>` @24
                        (string `array<char; 4>` @void "%d\n\0"))))
               (zero-extend `int` @32 (x~5 `unsigned char` @3))))
         (expression
            (call `int` @8
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @16
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @24
                  (noop-type-conversion `ptr<char>` @24
                     (addressof `ptr<array<char; 4>>` @24
                        (string `array<char; 4>` @void "%d\n\0"))))
               (sign-extend `int` @32 (y~6 `signed char` @4)))))))

----- stderr -----
