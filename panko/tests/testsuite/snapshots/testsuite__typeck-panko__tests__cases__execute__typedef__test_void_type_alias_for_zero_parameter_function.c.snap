---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/typedef/test_void_type_alias_for_zero_parameter_function.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration puts~0 `fn(∅: ptr<char const>) -> int` ∅)
   (typedef v `void`)
   (declaration f~1 `fn() -> void` ∅)
   (function-definition
      f~1 `fn() -> void`
      (compound-statement
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>) -> int>`
                  (puts~0 `fn(∅: ptr<char const>) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 2>>`
                        (string `array<char; 2>` "f\0"))))))))
   (declaration g~3 `fn(∅: ptr<fn() -> void>) -> void` ∅)
   (function-definition
      g~3 `fn(v: ptr<fn() -> void>) -> void`
      (params
         v~5 `ptr<fn() -> void>`)
      (compound-statement
         (expression (call `void` (v~5 `ptr<fn() -> void>`)))))
   (function-definition
      print_g~6 `fn() -> void`
      (compound-statement
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>) -> int>`
                  (puts~0 `fn(∅: ptr<char const>) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 2>>`
                        (string `array<char; 2>` "g\0"))))))))
   (function-definition
      main~7 `fn() -> int`
      (compound-statement
         (expression
            (call `void`
               (addressof `ptr<fn() -> void>`
                  (f~1 `fn() -> void`))))
         (expression
            (call `void`
               (addressof `ptr<fn(v: ptr<fn() -> void>) -> void>`
                  (g~3 `fn(v: ptr<fn() -> void>) -> void`))
               (addressof `ptr<fn() -> void>`
                  (print_g~6 `fn() -> void`)))))))

----- stderr -----
