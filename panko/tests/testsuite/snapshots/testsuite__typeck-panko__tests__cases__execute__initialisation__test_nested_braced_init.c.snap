---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/initialisation/test_nested_braced_init.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/initialisation/test_nested_braced_init.c"
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition
      main~1 `fn(∅: int, argv: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~2 `int`
         argv~3 `ptr<ptr<char>>`)
      (compound-statement
         (definition x~4 `int`
            (braced
               (subobject +0 (3 `int`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (x~4 `int`)))
         (definition y~5 `long`
            (braced
               (subobject +0 (sign-extend `long` (negate `int` (42 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (2 `int`)))))
               (y~5 `long`)))
         (definition xs~6 `array<int; 5>`
            (braced
               (subobject +0 (negate `int` (1 `int`)))
               (subobject +4 (add `int` (negate `int` (5 `int`)) (negate `int` (2 `int`))))
               (subobject +8 (3 `int`))
               (subobject +12 (4 `int`))
               (subobject +16 (5 `int`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 5>>`
                           (xs~6 `array<int; 5>`)))
                     (sign-extend `unsigned long` (0 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 5>>`
                           (xs~6 `array<int; 5>`)))
                     (sign-extend `unsigned long` (1 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 5>>`
                           (xs~6 `array<int; 5>`)))
                     (sign-extend `unsigned long` (2 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 5>>`
                           (xs~6 `array<int; 5>`)))
                     (sign-extend `unsigned long` (3 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 5>>`
                           (xs~6 `array<int; 5>`)))
                     (sign-extend `unsigned long` (4 `int`))))))
         (definition ys~7 `array<array<int; 2>; 2>`
            (braced
               (subobject +0 (1 `int`))
               (subobject +4 (2 `int`))
               (subobject +8 (3 `int`))
               (subobject +12 (4 `int`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (ys~7 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (0 `int`))))))
                     (sign-extend `unsigned long` (0 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (ys~7 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (0 `int`))))))
                     (sign-extend `unsigned long` (1 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (ys~7 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (1 `int`))))))
                     (sign-extend `unsigned long` (0 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (ys~7 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (1 `int`))))))
                     (sign-extend `unsigned long` (1 `int`))))))
         (definition zs~8 `array<int; 2>`
            (braced
               (subobject +0 (1 `int`))
               (subobject +4 (2 `int`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (zs~8 `array<int; 2>`)))
                     (sign-extend `unsigned long` (0 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (zs~8 `array<int; 2>`)))
                     (sign-extend `unsigned long` (1 `int`))))))
         (definition as~9 `array<array<int; 2>; 2>`
            (braced
               (subobject +0 (1 `int`))
               (subobject +4 (2 `int`))
               (subobject +8 (3 `int`))
               (subobject +12 (4 `int`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (as~9 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (0 `int`))))))
                     (sign-extend `unsigned long` (0 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (as~9 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (0 `int`))))))
                     (sign-extend `unsigned long` (1 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (as~9 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (1 `int`))))))
                     (sign-extend `unsigned long` (0 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (as~9 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (1 `int`))))))
                     (sign-extend `unsigned long` (1 `int`))))))
         (definition bs~10 `array<array<int; 2>; 2>`
            (braced
               (subobject +0 (1 `int`))
               (subobject +4 (3 `int`))
               (subobject +8 (4 `int`))
               (subobject +12 (5 `int`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (bs~10 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (0 `int`))))))
                     (sign-extend `unsigned long` (0 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (bs~10 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (0 `int`))))))
                     (sign-extend `unsigned long` (1 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (bs~10 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (1 `int`))))))
                     (sign-extend `unsigned long` (0 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~3 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 2>>`
                           (deref `array<int; 2>`
                              (ptr-add `ptr<array<int; 2>>`
                                 (noop-type-conversion `ptr<array<int; 2>>`
                                    (addressof `ptr<array<array<int; 2>; 2>>`
                                       (bs~10 `array<array<int; 2>; 2>`)))
                                 (sign-extend `unsigned long` (1 `int`))))))
                     (sign-extend `unsigned long` (1 `int`)))))))))

----- stderr -----
