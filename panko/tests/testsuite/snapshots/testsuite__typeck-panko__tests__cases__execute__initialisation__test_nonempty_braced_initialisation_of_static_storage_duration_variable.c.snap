---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/initialisation/test_nonempty_braced_initialisation_of_static_storage_duration_variable.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/initialisation/test_nonempty_braced_initialisation_of_static_storage_duration_variable.c"
   (declaration external printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (definition external xs~1 `array<int; 100>`
      (braced
         (subobject +0 (42 `int`))
         (subobject +4 (27 `int`))
         (subobject +8 (5 `int`))
         (subobject +12 (2147483647 `int`))))
   (definition external value~2 `int`
      (braced
         (subobject +0 (123 `int`))))
   (function-definition external
      main~3 `fn(∅: int, ∅: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~4 `int`
         main.unnamed_parameter.1~5 `ptr<ptr<char>>`)
      (compound-statement
         (definition s~6 `array<char; 100>`
            (braced
               (subobject +0 (truncate `char` (37 `int`)))
               (subobject +1 (truncate `char` (100 `int`)))
               (subobject +2 (truncate `char` (10 `int`)))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 100>>`
                        (s~6 `array<char; 100>`))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 100>>`
                           (xs~1 `array<int; 100>`)))
                     (sign-extend `unsigned long` (0 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 100>>`
                        (s~6 `array<char; 100>`))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 100>>`
                           (xs~1 `array<int; 100>`)))
                     (sign-extend `unsigned long` (1 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 100>>`
                        (s~6 `array<char; 100>`))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 100>>`
                           (xs~1 `array<int; 100>`)))
                     (sign-extend `unsigned long` (2 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 100>>`
                        (s~6 `array<char; 100>`))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 100>>`
                           (xs~1 `array<int; 100>`)))
                     (sign-extend `unsigned long` (3 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 100>>`
                        (s~6 `array<char; 100>`))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 100>>`
                           (xs~1 `array<int; 100>`)))
                     (sign-extend `unsigned long` (4 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 100>>`
                        (s~6 `array<char; 100>`))))
               (deref `int`
                  (ptr-add `ptr<int>`
                     (noop-type-conversion `ptr<int>`
                        (addressof `ptr<array<int; 100>>`
                           (xs~1 `array<int; 100>`)))
                     (sign-extend `unsigned long` (99 `int`))))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 100>>`
                        (s~6 `array<char; 100>`))))
               (value~2 `int`))))))

----- stderr -----
