---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/initialisation/test_nonempty_braced_initialisation_of_static_storage_duration_variable.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (definition xs~1 `array<int; (constexpr 100)>`
      (braced
         (subobject +0 (42 `int`))
         (subobject +4 (27 `int`))
         (subobject +8 (5 `int`))
         (subobject +12 (2147483647 `int`))))
   (function-definition
      main~2 `fn(∅: int, ∅: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~3 `int`
         main.unnamed_parameter.1~4 `ptr<ptr<char>>`)
      (compound-statement
         (definition s~5 `array<char; (constexpr 100)>`
            (braced
               (subobject +0 (truncate (37 `int`) `char`))
               (subobject +1 (truncate (100 `int`) `char`))
               (subobject +2 (truncate (10 `int`) `char`))))
         (expression
            (call (addressof (printf~0 `fn(∅: ptr<char const>, ...) -> int`) `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (noop-type-conversion (addressof (s~5 `array<char; (constexpr 100)>`) `ptr<array<char; (constexpr 100)>>`) `ptr<char>`) `ptr<char const>`)
               (deref (ptr-add (noop-type-conversion (addressof (xs~1 `array<int; (constexpr 100)>`) `ptr<array<int; (constexpr 100)>>`) `ptr<int>`) (sign-extend (0 `int`) `unsigned long`) `ptr<int>`) `int`)
               `int`))
         (expression
            (call (addressof (printf~0 `fn(∅: ptr<char const>, ...) -> int`) `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (noop-type-conversion (addressof (s~5 `array<char; (constexpr 100)>`) `ptr<array<char; (constexpr 100)>>`) `ptr<char>`) `ptr<char const>`)
               (deref (ptr-add (noop-type-conversion (addressof (xs~1 `array<int; (constexpr 100)>`) `ptr<array<int; (constexpr 100)>>`) `ptr<int>`) (sign-extend (1 `int`) `unsigned long`) `ptr<int>`) `int`)
               `int`))
         (expression
            (call (addressof (printf~0 `fn(∅: ptr<char const>, ...) -> int`) `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (noop-type-conversion (addressof (s~5 `array<char; (constexpr 100)>`) `ptr<array<char; (constexpr 100)>>`) `ptr<char>`) `ptr<char const>`)
               (deref (ptr-add (noop-type-conversion (addressof (xs~1 `array<int; (constexpr 100)>`) `ptr<array<int; (constexpr 100)>>`) `ptr<int>`) (sign-extend (2 `int`) `unsigned long`) `ptr<int>`) `int`)
               `int`))
         (expression
            (call (addressof (printf~0 `fn(∅: ptr<char const>, ...) -> int`) `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (noop-type-conversion (addressof (s~5 `array<char; (constexpr 100)>`) `ptr<array<char; (constexpr 100)>>`) `ptr<char>`) `ptr<char const>`)
               (deref (ptr-add (noop-type-conversion (addressof (xs~1 `array<int; (constexpr 100)>`) `ptr<array<int; (constexpr 100)>>`) `ptr<int>`) (sign-extend (3 `int`) `unsigned long`) `ptr<int>`) `int`)
               `int`))
         (expression
            (call (addressof (printf~0 `fn(∅: ptr<char const>, ...) -> int`) `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (noop-type-conversion (addressof (s~5 `array<char; (constexpr 100)>`) `ptr<array<char; (constexpr 100)>>`) `ptr<char>`) `ptr<char const>`)
               (deref (ptr-add (noop-type-conversion (addressof (xs~1 `array<int; (constexpr 100)>`) `ptr<array<int; (constexpr 100)>>`) `ptr<int>`) (sign-extend (4 `int`) `unsigned long`) `ptr<int>`) `int`)
               `int`))
         (expression
            (call (addressof (printf~0 `fn(∅: ptr<char const>, ...) -> int`) `ptr<fn(∅: ptr<char const>, ...) -> int>`)
               (noop-type-conversion (noop-type-conversion (addressof (s~5 `array<char; (constexpr 100)>`) `ptr<array<char; (constexpr 100)>>`) `ptr<char>`) `ptr<char const>`)
               (deref (ptr-add (noop-type-conversion (addressof (xs~1 `array<int; (constexpr 100)>`) `ptr<array<int; (constexpr 100)>>`) `ptr<int>`) (sign-extend (99 `int`) `unsigned long`) `ptr<int>`) `int`)
               `int`)))))

----- stderr -----
