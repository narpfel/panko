---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/test_compound_assignment_only_evaluates_lhs_once.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/test_compound_assignment_only_evaluates_lhs_once.c"
   (declaration external (putchar~0 `fn(∅: int) -> int` (static putchar)) ∅)
   (function-definition external
      (f~1 `fn(p: ptr<int>) -> ptr<int>` (static f))
      (params
         (p~2 `ptr<int>` @0))
      (compound-statement
         (expression
            (call `int` @8
               (addressof `ptr<fn(∅: int) -> int>` @16
                  (putchar~0 `fn(∅: int) -> int` (static putchar)))
               (65 `int` @24)))
         (expression
            (call `int` @8
               (addressof `ptr<fn(∅: int) -> int>` @16
                  (putchar~0 `fn(∅: int) -> int` (static putchar)))
               (10 `int` @24)))
         (return (p~2 `ptr<int>` @0))))
   (function-definition external
      (main~3 `fn() -> int` (static main))
      (compound-statement
         (definition (x~4 `int` @0) (42 `int` @0))
         (expression
            (combine `int` @4
               (assign `ptr<int>` @8
                  (unnamed-temporary~5 `ptr<int>` @8)
                  (addressof `ptr<int>` @8
                     (deref `int` @8
                        (call `ptr<int>` @40
                           (addressof `ptr<fn(p: ptr<int>) -> ptr<int>>` @48
                              (f~1 `fn(p: ptr<int>) -> ptr<int>` (static f)))
                           (addressof `ptr<int>` @56
                              (x~4 `int` @0))))))
               (assign `int` @4
                  (deref `int` @4 (unnamed-temporary~5 `ptr<int>` @8))
                  (truncate `int` @16
                     (add `long` @24
                        (sign-extend `long` @24 (deref `int` @32 (unnamed-temporary~5 `ptr<int>` @8)))
                        (27 `long` @40))))))
         (return (x~4 `int` @0)))))

----- stderr -----
