---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=scopes"
    - "--stop-after=scopes"
    - panko/tests/cases/initialisation/test_excess_initialisers_braced.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (function-definition
      main~0 `fn() -> int`
      (compound-statement
         (declaration x~1 `int`
            (braced
               1
               (braced
                  2
                  3)))
         (declaration xs~2 `array<int; 2>`
            (braced
               1
               2
               (braced
                  3)
               (braced
                  4)))
         (declaration ys~3 `array<array<int; 2>; 2>`
            (braced
               1
               2
               3
               4
               (braced
                  5)))
         (declaration zs~4 `array<array<int; 2>; 3>`
            (braced
               (braced
                  1
                  2
                  (braced
                     3
                     6))
               (braced
                  4
                  5)))
         (declaration qs~5 `array<int; 2>`
            (braced
               1
               2
               (braced
                  3
                  4)
               5))
         (declaration ws~6 `array<array<int; 2>; 3>`
            (braced
               (braced
                  1
                  2
                  (braced
                     3
                     6)
                  70
                  80)
               (braced
                  4
                  5)
               6
               7
               8
               9))
         (declaration excess_empty_braces_in_scalar~7 `int`
            (braced
               42
               (braced ∅)))
         (declaration excess_empty_braces_in_array~8 `array<int; 2>`
            (braced
               1
               2
               (braced ∅)))
         (declaration excess_empty_braces_in_array_2~9 `array<int; 2>`
            (braced
               1
               2
               (braced ∅)
               4))
         (declaration nested_braces_dont_emit_nested_errors~10 `int`
            (braced
               1
               (braced
                  2
                  (braced
                     3)))))))

----- stderr -----
