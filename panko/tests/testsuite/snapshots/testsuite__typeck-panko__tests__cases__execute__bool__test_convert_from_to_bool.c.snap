---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/bool/test_convert_from_to_bool.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition
      main~1 `fn() -> int`
      (compound-statement
         (definition x~2 `int` (42 `int`))
         (definition p~3 `ptr<int>`
            (addressof `ptr<int>`
               (x~2 `int`)))
         (definition from_ptr~4 `bool` (bool-cast `bool` (p~3 `ptr<int>`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 4>>`
                        (string `array<char; 4>` "%d\n\0"))))
               (zero-extend `int` (from_ptr~4 `bool`))))
         (definition from_zero~5 `bool` (bool-cast `bool` (0ull `long long`)))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>`
                  (noop-type-conversion `ptr<char>`
                     (addressof `ptr<array<char; 4>>`
                        (string `array<char; 4>` "%d\n\0"))))
               (zero-extend `int` (from_zero~5 `bool`))))
         (definition b~6 `bool` (bool-cast `bool` (42 `int`)))
         (return (truncate `int` (add `unsigned long` (zero-extend `unsigned long` (b~6 `bool`)) (1ul `unsigned long`)))))))

----- stderr -----
