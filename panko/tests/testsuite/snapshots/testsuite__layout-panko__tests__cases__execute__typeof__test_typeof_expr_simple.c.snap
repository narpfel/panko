---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/typeof/test_typeof_expr_simple.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/typeof/test_typeof_expr_simple.c"
   (declaration (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)) ∅)
   (declaration (puts~1 `fn(∅: ptr<char const>) -> int` (static puts)) ∅)
   (function-definition
      (main~2 `fn() -> int` (static main))
      (compound-statement
         (definition (x~3 `unsigned long` @0) (sign-extend `unsigned long` @0 (42 `int` @8)))
         (definition (y~4 `unsigned long` @8) (sign-extend `unsigned long` @8 (27 `int` @16)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @24
                  (puts~1 `fn(∅: ptr<char const>) -> int` (static puts)))
               (noop-type-conversion `ptr<char const>` @32
                  (noop-type-conversion `ptr<char>` @32
                     (addressof `ptr<array<char; 9>>` @32
                        (string `array<char; 9>` @void "it works\0"))))))
         (definition (p~5 `ptr<unsigned long const> const` @16)
            (noop-type-conversion `ptr<unsigned long const>` @16
               (addressof `ptr<unsigned long>` @16
                  (x~3 `unsigned long` @0))))
         (definition (xs~6 `array<unsigned long; 10>` @24) (braced ∅))
         (expression
            (call `int` @104
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @112
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @120
                  (noop-type-conversion `ptr<char>` @120
                     (addressof `ptr<array<char; 5>>` @120
                        (string `array<char; 5>` @void "%zu\n\0"))))
               (10 `unsigned long` @128)))
         (expression
            (call `int` @104
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @112
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @120
                  (noop-type-conversion `ptr<char>` @120
                     (addressof `ptr<array<char; 5>>` @120
                        (string `array<char; 5>` @void "%zu\n\0"))))
               (10 `unsigned long` @128)))
         (expression
            (call `int` @104
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @112
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @120
                  (noop-type-conversion `ptr<char>` @120
                     (addressof `ptr<array<char; 5>>` @120
                        (string `array<char; 5>` @void "%zu\n\0"))))
               (40 `unsigned long` @128)))
         (return (truncate `int` @104 (deref `unsigned long const` @112 (p~5 `ptr<unsigned long const> const` @16)))))))

----- stderr -----
