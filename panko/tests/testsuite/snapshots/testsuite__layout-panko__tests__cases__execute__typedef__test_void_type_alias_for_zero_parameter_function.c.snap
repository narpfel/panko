---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/typedef/test_void_type_alias_for_zero_parameter_function.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/typedef/test_void_type_alias_for_zero_parameter_function.c"
   (declaration (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)) ∅)
   (typedef v `void`)
   (declaration (f~1 `fn() -> void` (static f)) ∅)
   (function-definition
      (f~1 `fn() -> void` (static f))
      (compound-statement
         (expression
            (call `int` @0
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @8
                  (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)))
               (noop-type-conversion `ptr<char const>` @16
                  (noop-type-conversion `ptr<char>` @16
                     (addressof `ptr<array<char; 2>>` @16
                        (string `array<char; 2>` @void "f\0"))))))))
   (declaration (g~3 `fn(∅: ptr<fn() -> void>) -> void` (static g)) ∅)
   (function-definition
      (g~3 `fn(v: ptr<fn() -> void>) -> void` (static g))
      (params
         (v~5 `ptr<fn() -> void>` @0))
      (compound-statement
         (expression (call `void` @void (v~5 `ptr<fn() -> void>` @0)))))
   (function-definition
      (print_g~6 `fn() -> void` (static print_g))
      (compound-statement
         (expression
            (call `int` @0
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @8
                  (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)))
               (noop-type-conversion `ptr<char const>` @16
                  (noop-type-conversion `ptr<char>` @16
                     (addressof `ptr<array<char; 2>>` @16
                        (string `array<char; 2>` @void "g\0"))))))))
   (function-definition
      (main~7 `fn() -> int` (static main))
      (compound-statement
         (expression
            (call `void` @void
               (addressof `ptr<fn() -> void>` @0
                  (f~1 `fn() -> void` (static f)))))
         (expression
            (call `void` @void
               (addressof `ptr<fn(v: ptr<fn() -> void>) -> void>` @0
                  (g~3 `fn(v: ptr<fn() -> void>) -> void` (static g)))
               (addressof `ptr<fn() -> void>` @8
                  (print_g~6 `fn() -> void` (static print_g))))))))

----- stderr -----
