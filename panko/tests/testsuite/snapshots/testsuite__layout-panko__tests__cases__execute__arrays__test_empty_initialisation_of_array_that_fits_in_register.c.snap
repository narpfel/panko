---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/arrays/test_empty_initialisation_of_array_that_fits_in_register.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/arrays/test_empty_initialisation_of_array_that_fits_in_register.c"
   (function-definition external
      (main~0 `fn() -> int` (static main))
      (compound-statement
         (definition (a1~1 `array<char; 1>` @0) (braced ∅))
         (definition (a2~2 `array<char; 2>` @1) (braced ∅))
         (definition (a3~3 `array<char; 3>` @3) (braced ∅))
         (definition (a4~4 `array<char; 4>` @6) (braced ∅))
         (definition (a5~5 `array<char; 5>` @10) (braced ∅))
         (definition (a6~6 `array<char; 6>` @15) (braced ∅))
         (definition (a7~7 `array<char; 7>` @21) (braced ∅))
         (definition (a8~8 `array<char; 8>` @28) (braced ∅))
         (definition (b1~9 `array<short; 1>` @36) (braced ∅))
         (definition (b2~10 `array<short; 2>` @38) (braced ∅))
         (definition (b3~11 `array<short; 3>` @42) (braced ∅))
         (definition (b4~12 `array<short; 4>` @48) (braced ∅))
         (definition (c1~13 `array<int; 1>` @56) (braced ∅))
         (definition (c2~14 `array<int; 2>` @60) (braced ∅))
         (definition (d1~15 `array<long; 1>` @72) (braced ∅)))))

----- stderr -----
