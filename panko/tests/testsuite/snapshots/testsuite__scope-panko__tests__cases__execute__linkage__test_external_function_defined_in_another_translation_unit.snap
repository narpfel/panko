---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=scopes"
    - "--stop-after=scopes"
    - panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/f.c
    - panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/main.c
    - panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/x.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/f.c"
   (declaration x~0 `int` ∅)
   (function-definition
      f~1 `fn(y: int) -> int`
      (params
         y~2 `int`)
      (compound-statement
         (return (add (name x~0 `int`) (name y~2 `int`))))))
(translation-unit "panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/main.c"
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (declaration f~1 `fn(∅: int) -> int` ∅)
   (declaration x~2 `int` ∅)
   (function-definition
      main~3 `fn() -> int`
      (compound-statement
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%d\n")
               (call (name f~1 `fn(∅: int) -> int`)
                  10)))
         (expression (assign (name x~2 `int`) 20))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%d\n")
               (call (name f~1 `fn(∅: int) -> int`)
                  123))))))
(translation-unit "panko/tests/cases/execute/linkage/test_external_function_defined_in_another_translation_unit/x.c"
   (declaration x~0 `int` 5))

----- stderr -----
