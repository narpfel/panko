---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/arithmetic/test_sizeof.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/arithmetic/test_sizeof.c"
   (declaration (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)) ∅)
   (declaration (calloc~1 `fn(∅: unsigned long, ∅: unsigned long) -> ptr<void>` (static calloc)) ∅)
   (function-definition
      (main~2 `fn(∅: int, argv: ptr<ptr<char>>) -> int` (static main))
      (params
         (main.unnamed_parameter.0~3 `int` @0)
         (argv~4 `ptr<ptr<char>>` @8))
      (compound-statement
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (1 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (1 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (8 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (8 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (8 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (2 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (4 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (8 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (8 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (8 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (4 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (4 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (8 `unsigned long` @48)))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (deref `ptr<char>` @32
                     (ptr-add `ptr<ptr<char>>` @40
                        (argv~4 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @48 (1 `int` @56)))))
               (8 `unsigned long` @48)))
         (expression (0 `int` @16))
         (expression (0 `int` @16))
         (definition (p~5 `ptr<int>` @16)
            (noop-type-conversion `ptr<int>` @16
               (call `ptr<void>` @16
                  (addressof `ptr<fn(∅: unsigned long, ∅: unsigned long) -> ptr<void>>` @24
                     (calloc~1 `fn(∅: unsigned long, ∅: unsigned long) -> ptr<void>` (static calloc)))
                  (sign-extend `unsigned long` @32 (1 `int` @40))
                  (4 `unsigned long` @48))))
         (return
            (truncate `int` @24
               (add `unsigned long` @32
                  (sign-extend `unsigned long` @32 (deref `int` @40 (p~5 `ptr<int>` @16)))
                  (8 `unsigned long` @48)))))))

----- stderr -----
