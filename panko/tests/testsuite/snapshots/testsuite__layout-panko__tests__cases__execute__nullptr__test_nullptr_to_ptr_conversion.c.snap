---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/nullptr/test_nullptr_to_ptr_conversion.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)) ∅)
   (declaration (puts~1 `fn(∅: ptr<char const>) -> int` (static puts)) ∅)
   (function-definition
      (main~2 `fn() -> int` (static main))
      (compound-statement
         (definition (p~3 `ptr<int>` @0) (noop-type-conversion `ptr<int>` @0 (nullptr `nullptr_t` @0)))
         (expression
            (call `int` @8
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @16
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @24
                  (noop-type-conversion `ptr<char>` @24
                     (addressof `ptr<array<char; 4>>` @24
                        (string `array<char; 4>` @void "%p\n\0"))))
               (noop-type-conversion `ptr<void>` @0 (p~3 `ptr<int>` @0))))
         (expression
            (call `int` @8
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @16
                  (puts~1 `fn(∅: ptr<char const>) -> int` (static puts)))
               (noop-type-conversion `ptr<char const>` @24
                  (conditional `ptr<char>` @24
                     (p~3 `ptr<int>` @0)
                     (noop-type-conversion `ptr<char>` @24
                        (addressof `ptr<array<char; 7>>` @24
                           (string `array<char; 7>` @void "truthy\0")))
                     (noop-type-conversion `ptr<char>` @24
                        (addressof `ptr<array<char; 6>>` @24
                           (string `array<char; 6>` @void "falsy\0")))))))
         (expression
            (call `int` @8
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @16
                  (puts~1 `fn(∅: ptr<char const>) -> int` (static puts)))
               (noop-type-conversion `ptr<char const>` @24
                  (conditional `ptr<char>` @24
                     (addressof `ptr<ptr<int>>` @32
                        (p~3 `ptr<int>` @0))
                     (noop-type-conversion `ptr<char>` @24
                        (addressof `ptr<array<char; 7>>` @24
                           (string `array<char; 7>` @void "truthy\0")))
                     (noop-type-conversion `ptr<char>` @24
                        (addressof `ptr<array<char; 6>>` @24
                           (string `array<char; 6>` @void "falsy\0")))))))
         (expression
            (call `int` @8
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @16
                  (puts~1 `fn(∅: ptr<char const>) -> int` (static puts)))
               (noop-type-conversion `ptr<char const>` @24
                  (conditional `ptr<char>` @24
                     (nullptr `nullptr_t` @32)
                     (noop-type-conversion `ptr<char>` @24
                        (addressof `ptr<array<char; 8>>` @24
                           (string `array<char; 8>` @void "someptr\0")))
                     (noop-type-conversion `ptr<char>` @24
                        (addressof `ptr<array<char; 8>>` @24
                           (string `array<char; 8>` @void "nullptr\0")))))))
         (return (truncate `int` @8 (noop-type-conversion `unsigned long` @16 (noop-type-conversion `ptr<int>` @16 (nullptr `nullptr_t` @16))))))))

----- stderr -----
