---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/string/test_string_literal_hex_escape_sequences.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/string/test_string_literal_hex_escape_sequences.c"
   (declaration external (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)) ∅)
   (declaration external (strcmp~1 `fn(∅: ptr<char const>, ∅: ptr<char const>) -> int` (static strcmp)) ∅)
   (function-definition external
      (main~2 `fn() -> int` (static main))
      (compound-statement
         (expression
            (call `int` @0
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @8
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @16
                  (noop-type-conversion `ptr<char>` @16
                     (addressof `ptr<array<char; 4>>` @16
                        (string `array<char; 4>` @void "%s\n\0"))))
               (noop-type-conversion `ptr<char>` @24
                  (addressof `ptr<array<char; 2>>` @24
                     (string `array<char; 2>` @void "a\0")))))
         (expression
            (call `int` @0
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @8
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @16
                  (noop-type-conversion `ptr<char>` @16
                     (addressof `ptr<array<char; 4>>` @16
                        (string `array<char; 4>` @void "%s\n\0"))))
               (noop-type-conversion `ptr<char>` @24
                  (addressof `ptr<array<char; 8>>` @24
                     (string `array<char; 8>` @void "abcaghi\0")))))
         (expression
            (call `int` @0
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @8
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @16
                  (noop-type-conversion `ptr<char>` @16
                     (addressof `ptr<array<char; 4>>` @16
                        (string `array<char; 4>` @void "%d\n\0"))))
               (call `int` @24
                  (addressof `ptr<fn(∅: ptr<char const>, ∅: ptr<char const>) -> int>` @32
                     (strcmp~1 `fn(∅: ptr<char const>, ∅: ptr<char const>) -> int` (static strcmp)))
                  (noop-type-conversion `ptr<char const>` @40
                     (noop-type-conversion `ptr<char>` @40
                        (addressof `ptr<array<char; 2>>` @40
                           (string `array<char; 2>` @void "\n\0"))))
                  (noop-type-conversion `ptr<char const>` @48
                     (noop-type-conversion `ptr<char>` @48
                        (addressof `ptr<array<char; 2>>` @48
                           (string `array<char; 2>` @void "\n\0")))))))
         (expression
            (call `int` @0
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @8
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @16
                  (noop-type-conversion `ptr<char>` @16
                     (addressof `ptr<array<char; 4>>` @16
                        (string `array<char; 4>` @void "%d\n\0"))))
               (call `int` @24
                  (addressof `ptr<fn(∅: ptr<char const>, ∅: ptr<char const>) -> int>` @32
                     (strcmp~1 `fn(∅: ptr<char const>, ∅: ptr<char const>) -> int` (static strcmp)))
                  (noop-type-conversion `ptr<char const>` @40
                     (noop-type-conversion `ptr<char>` @40
                        (addressof `ptr<array<char; 4>>` @40
                           (string `array<char; 4>` @void "q\nq\0"))))
                  (noop-type-conversion `ptr<char const>` @48
                     (noop-type-conversion `ptr<char>` @48
                        (addressof `ptr<array<char; 4>>` @48
                           (string `array<char; 4>` @void "q\nq\0")))))))
         (return (truncate `int` @0 (2 `unsigned long` @8))))))

----- stderr -----
