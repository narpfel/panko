---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/conditional/test_conditional_only_evaluates_taken_branch.c
snapshot_kind: text
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)) ∅)
   (function-definition
      (main~1 `fn(∅: int, argv: ptr<ptr<char>>) -> int` (static main))
      (params
         (main.unnamed_parameter.0~2 `int` @0)
         (argv~3 `ptr<ptr<char>>` @8))
      (compound-statement
         (expression
            (conditional `int` @16
               (0 `int` @84)
               (call `int` @16 (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24 (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
                  (noop-type-conversion `ptr<char const>` @32
                     (deref `ptr<char>` @32
                        (ptr-add `ptr<ptr<char>>` @40
                           (argv~3 `ptr<ptr<char>>` @8)
                           (sign-extend `unsigned long` @48 (1 `int` @56)))))
                  (1 `int` @48))
               (call `int` @16 (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @56 (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
                  (noop-type-conversion `ptr<char const>` @64
                     (deref `ptr<char>` @64
                        (ptr-add `ptr<ptr<char>>` @72
                           (argv~3 `ptr<ptr<char>>` @8)
                           (sign-extend `unsigned long` @80 (1 `int` @88)))))
                  (2 `int` @80))))
         (expression
            (conditional `int` @16
               (42 `int` @84)
               (call `int` @16 (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24 (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
                  (noop-type-conversion `ptr<char const>` @32
                     (deref `ptr<char>` @32
                        (ptr-add `ptr<ptr<char>>` @40
                           (argv~3 `ptr<ptr<char>>` @8)
                           (sign-extend `unsigned long` @48 (1 `int` @56)))))
                  (3 `int` @48))
               (call `int` @16 (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @56 (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
                  (noop-type-conversion `ptr<char const>` @64
                     (deref `ptr<char>` @64
                        (ptr-add `ptr<ptr<char>>` @72
                           (argv~3 `ptr<ptr<char>>` @8)
                           (sign-extend `unsigned long` @80 (1 `int` @88)))))
                  (4 `int` @80)))))))

----- stderr -----
