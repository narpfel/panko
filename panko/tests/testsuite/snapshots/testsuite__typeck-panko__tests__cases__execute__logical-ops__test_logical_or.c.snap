---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=typeck"
    - "--stop-after=typeck"
    - panko/tests/cases/execute/logical-ops/test_logical_or.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (declaration f~1 `fn() -> int` ∅)
   (declaration g~2 `fn() -> int` ∅)
   (function-definition
      main~3 `fn(∅: int, argv: ptr<ptr<char>>) -> int`
      (params
         main.unnamed_parameter.0~4 `int`
         argv~5 `ptr<ptr<char>>`)
      (compound-statement
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~5 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (logical-or `int`
                  (0 `int`)
                  (0 `int`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~5 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (logical-or `int`
                  (0 `int`)
                  (42 `int`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~5 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (logical-or `int`
                  (27 `int`)
                  (0 `int`))))
         (expression
            (call `int`
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
               (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~5 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
               (logical-or `int`
                  (42 `int`)
                  (27 `int`))))
         (expression
            (logical-or `int`
               (0 `int`)
               (call `int`
                  (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                     (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
                  (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~5 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
                  (123 `int`))))
         (expression
            (logical-or `int`
               (123 `int`)
               (call `int`
                  (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                     (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
                  (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~5 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
                  (456 `int`))))
         (expression
            (logical-or `int`
               (call `int`
                  (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                     (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
                  (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~5 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
                  (5 `int`))
               (call `int`
                  (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                     (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
                  (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~5 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
                  (7 `int`))))
         (expression
            (logical-or `int`
               (call `int`
                  (addressof `ptr<fn() -> int>`
                     (f~1 `fn() -> int`)))
               (call `int`
                  (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                     (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
                  (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~5 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
                  (1 `int`))))
         (expression
            (logical-or `int`
               (call `int`
                  (addressof `ptr<fn() -> int>`
                     (g~2 `fn() -> int`)))
               (call `int`
                  (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>`
                     (printf~0 `fn(∅: ptr<char const>, ...) -> int`))
                  (noop-type-conversion `ptr<char const>` (deref `ptr<char>` (ptr-add `ptr<ptr<char>>` (argv~5 `ptr<ptr<char>>`) (sign-extend `unsigned long` (1 `int`)))))
                  (2 `int`))))))
   (function-definition
      f~1 `fn() -> int`
      (compound-statement
         (return (0 `int`))))
   (function-definition
      g~2 `fn() -> int`
      (compound-statement
         (return (2 `int`)))))

----- stderr -----
