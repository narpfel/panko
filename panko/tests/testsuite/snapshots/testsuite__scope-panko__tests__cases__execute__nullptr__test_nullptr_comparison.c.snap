---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=scopes"
    - "--stop-after=scopes"
    - panko/tests/cases/execute/nullptr/test_nullptr_comparison.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/nullptr/test_nullptr_comparison.c"
   (declaration printf~0 `fn(∅: ptr<char const>, ...) -> int` ∅)
   (function-definition
      main~1 `fn() -> int`
      (compound-statement
         (declaration x~2 `int` 42)
         (declaration p~3 `ptr<int>` (addressof (name x~2 `int`)))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%d\n")
               (equal (name p~3 `ptr<int>`) nullptr)))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%d\n")
               (not-equal (name p~3 `ptr<int>`) nullptr)))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%d\n")
               (equal nullptr nullptr)))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%d\n")
               (not-equal nullptr nullptr)))
         (declaration null~4 `ptr<array<long; 10>>` nullptr)
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%d\n")
               (equal (name null~4 `ptr<array<long; 10>>`) nullptr)))
         (expression
            (call (name printf~0 `fn(∅: ptr<char const>, ...) -> int`)
               (string "%d\n")
               (not-equal (name null~4 `ptr<array<long; 10>>`) nullptr))))))

----- stderr -----
