---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/initialisation/test_multilevel_designated_initialisation_of_array.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit
   (declaration (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)) ∅)
   (function-definition
      (f~1 `fn(x: int) -> int` (static f))
      (params
         (x~2 `int` @0))
      (compound-statement
         (definition (s~3 `array<char; (constexpr 4)>` @4)
            (braced
               (subobject +0 (truncate `char` @4 (37 `int` @8)))
               (subobject +1 (truncate `char` @5 (100 `int` @12)))
               (subobject +2 (truncate `char` @6 (10 `int` @16)))
               (subobject +3 (truncate `char` @7 (0 `int` @20)))))
         (expression
            (call `int` @8 (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @16 (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @24 (noop-type-conversion `ptr<char>` @24 (addressof `ptr<array<char; ∅>>` @24 (s~3 `array<char; ∅>` @4))))
               (x~2 `int` @0)))
         (return (x~2 `int` @0))))
   (function-definition
      (main~4 `fn(∅: int, argv: ptr<ptr<char>>) -> int` (static main))
      (params
         (main.unnamed_parameter.0~5 `int` @0)
         (argv~6 `ptr<ptr<char>>` @8))
      (compound-statement
         (definition (xs~7 `array<array<int; (constexpr 2)>; (constexpr 2)>` @16)
            (braced
               (subobject +0
                  (call `int` @16 (addressof `ptr<fn(x: int) -> int>` @32 (f~1 `fn(x: int) -> int` (static f)))
                     (1 `int` @40)))
               (subobject +4
                  (call `int` @20 (addressof `ptr<fn(x: int) -> int>` @48 (f~1 `fn(x: int) -> int` (static f)))
                     (2 `int` @56)))
               (subobject +8
                  (call `int` @24 (addressof `ptr<fn(x: int) -> int>` @64 (f~1 `fn(x: int) -> int` (static f)))
                     (3 `int` @72)))
               (subobject +12
                  (call `int` @28 (addressof `ptr<fn(x: int) -> int>` @80 (f~1 `fn(x: int) -> int` (static f)))
                     (4 `int` @88)))))
         (expression
            (call `int` @32 (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @40 (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @48
                  (deref `ptr<char>` @48
                     (ptr-add `ptr<ptr<char>>` @56
                        (argv~6 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @64 (1 `int` @72)))))
               (deref `int` @64
                  (ptr-add `ptr<int>` @72
                     (noop-type-conversion `ptr<int>` @72
                        (addressof `ptr<array<int; (constexpr 2)>>` @72
                           (deref `array<int; (constexpr 2)>` @72
                              (ptr-add `ptr<array<int; (constexpr 2)>>` @80
                                 (noop-type-conversion `ptr<array<int; (constexpr 2)>>` @80 (addressof `ptr<array<array<int; (constexpr 2)>; (constexpr 2)>>` @80 (xs~7 `array<array<int; (constexpr 2)>; (constexpr 2)>` @16)))
                                 (sign-extend `unsigned long` @88 (0 `int` @96))))))
                     (sign-extend `unsigned long` @88 (0 `int` @96))))))
         (expression
            (call `int` @32 (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @40 (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @48
                  (deref `ptr<char>` @48
                     (ptr-add `ptr<ptr<char>>` @56
                        (argv~6 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @64 (1 `int` @72)))))
               (deref `int` @64
                  (ptr-add `ptr<int>` @72
                     (noop-type-conversion `ptr<int>` @72
                        (addressof `ptr<array<int; (constexpr 2)>>` @72
                           (deref `array<int; (constexpr 2)>` @72
                              (ptr-add `ptr<array<int; (constexpr 2)>>` @80
                                 (noop-type-conversion `ptr<array<int; (constexpr 2)>>` @80 (addressof `ptr<array<array<int; (constexpr 2)>; (constexpr 2)>>` @80 (xs~7 `array<array<int; (constexpr 2)>; (constexpr 2)>` @16)))
                                 (sign-extend `unsigned long` @88 (0 `int` @96))))))
                     (sign-extend `unsigned long` @88 (1 `int` @96))))))
         (expression
            (call `int` @32 (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @40 (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @48
                  (deref `ptr<char>` @48
                     (ptr-add `ptr<ptr<char>>` @56
                        (argv~6 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @64 (1 `int` @72)))))
               (deref `int` @64
                  (ptr-add `ptr<int>` @72
                     (noop-type-conversion `ptr<int>` @72
                        (addressof `ptr<array<int; (constexpr 2)>>` @72
                           (deref `array<int; (constexpr 2)>` @72
                              (ptr-add `ptr<array<int; (constexpr 2)>>` @80
                                 (noop-type-conversion `ptr<array<int; (constexpr 2)>>` @80 (addressof `ptr<array<array<int; (constexpr 2)>; (constexpr 2)>>` @80 (xs~7 `array<array<int; (constexpr 2)>; (constexpr 2)>` @16)))
                                 (sign-extend `unsigned long` @88 (1 `int` @96))))))
                     (sign-extend `unsigned long` @88 (0 `int` @96))))))
         (expression
            (call `int` @32 (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @40 (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @48
                  (deref `ptr<char>` @48
                     (ptr-add `ptr<ptr<char>>` @56
                        (argv~6 `ptr<ptr<char>>` @8)
                        (sign-extend `unsigned long` @64 (1 `int` @72)))))
               (deref `int` @64
                  (ptr-add `ptr<int>` @72
                     (noop-type-conversion `ptr<int>` @72
                        (addressof `ptr<array<int; (constexpr 2)>>` @72
                           (deref `array<int; (constexpr 2)>` @72
                              (ptr-add `ptr<array<int; (constexpr 2)>>` @80
                                 (noop-type-conversion `ptr<array<int; (constexpr 2)>>` @80 (addressof `ptr<array<array<int; (constexpr 2)>; (constexpr 2)>>` @80 (xs~7 `array<array<int; (constexpr 2)>; (constexpr 2)>` @16)))
                                 (sign-extend `unsigned long` @88 (1 `int` @96))))))
                     (sign-extend `unsigned long` @88 (1 `int` @96)))))))))

----- stderr -----
