---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/string/test_string_literal.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/string/test_string_literal.c"
   (declaration external (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)) ∅)
   (function-definition external
      (main~1 `fn() -> int` (static main))
      (compound-statement
         (expression
            (noop-type-conversion `ptr<char>` @0
               (addressof `ptr<array<char; 15>>` @0
                  (string `array<char; 15>` @void "ignored string\0"))))
         (expression
            (call `int` @0
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @8
                  (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)))
               (noop-type-conversion `ptr<char const>` @16
                  (noop-type-conversion `ptr<char>` @16
                     (addressof `ptr<array<char; 25>>` @16
                        (string `array<char; 25>` @void "some string concatenated\0"))))))
         (definition (char_star~2 `ptr<char>` @0)
            (noop-type-conversion `ptr<char>` @0
               (addressof `ptr<array<char; 10>>` @0
                  (string `array<char; 10>` @void "char star\0"))))
         (expression
            (call `int` @8
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @16
                  (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)))
               (noop-type-conversion `ptr<char const>` @0 (char_star~2 `ptr<char>` @0))))
         (definition (char_const_star~3 `ptr<char const>` @8)
            (noop-type-conversion `ptr<char const>` @8
               (noop-type-conversion `ptr<char>` @8
                  (addressof `ptr<array<char; 16>>` @8
                     (string `array<char; 16>` @void "char const star\0")))))
         (expression
            (call `int` @16
               (addressof `ptr<fn(∅: ptr<char const>) -> int>` @24
                  (puts~0 `fn(∅: ptr<char const>) -> int` (static puts)))
               (char_const_star~3 `ptr<char const>` @8)))
         (return (truncate `int` @16 (7 `unsigned long` @24))))))

----- stderr -----
