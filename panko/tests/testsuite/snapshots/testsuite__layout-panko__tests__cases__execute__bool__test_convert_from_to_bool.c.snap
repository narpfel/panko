---
source: panko/tests/testsuite/main.rs
info:
  program: panko
  args:
    - "--print=layout"
    - "--stop-after=layout"
    - panko/tests/cases/execute/bool/test_convert_from_to_bool.c
---
success: true
exit_code: 0
----- stdout -----
(translation-unit "panko/tests/cases/execute/bool/test_convert_from_to_bool.c"
   (declaration (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)) ∅)
   (function-definition
      (main~1 `fn() -> int` (static main))
      (compound-statement
         (definition (x~2 `int` @0) (42 `int` @0))
         (definition (p~3 `ptr<int>` @8)
            (addressof `ptr<int>` @8
               (x~2 `int` @0)))
         (definition (from_ptr~4 `bool` @16) (bool-cast `bool` @16 (p~3 `ptr<int>` @8)))
         (expression
            (call `int` @20
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (noop-type-conversion `ptr<char>` @32
                     (addressof `ptr<array<char; 4>>` @32
                        (string `array<char; 4>` @void "%d\n\0"))))
               (zero-extend `int` @40 (from_ptr~4 `bool` @16))))
         (definition (from_zero~5 `bool` @17) (bool-cast `bool` @17 (0 `long long` @24)))
         (expression
            (call `int` @20
               (addressof `ptr<fn(∅: ptr<char const>, ...) -> int>` @24
                  (printf~0 `fn(∅: ptr<char const>, ...) -> int` (static printf)))
               (noop-type-conversion `ptr<char const>` @32
                  (noop-type-conversion `ptr<char>` @32
                     (addressof `ptr<array<char; 4>>` @32
                        (string `array<char; 4>` @void "%d\n\0"))))
               (zero-extend `int` @40 (from_zero~5 `bool` @17))))
         (definition (b~6 `bool` @18) (bool-cast `bool` @18 (42 `int` @20)))
         (return
            (truncate `int` @20
               (add `unsigned long` @24
                  (zero-extend `unsigned long` @24 (b~6 `bool` @18))
                  (1 `unsigned long` @32)))))))

----- stderr -----
